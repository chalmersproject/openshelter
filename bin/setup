#!/usr/bin/env ruby
# frozen_string_literal: true

require "fileutils"

# Path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("`#{args}` failed")
end

FileUtils.chdir(APP_ROOT) do
  # This script is a way to set up or update your development environment
  # automatically. This script is idempotent, so that you can run it at any time
  # and get an expectable outcome.
  #
  # Add necessary setup steps to this file.

  puts "== Installing ruby gems =="
  system!("gem install bundler --conservative")
  if ENV["RAILS_ENV"] == "production"
    system("bundle config set --local without 'development test'")
  end
  system("bundle check") || system!("bundle install")

  puts "\n== Installing js packages =="
  system("yarn install")

  puts "\n== Installing husky githooks =="
  system("yarn husky install")

  puts "\n== Initializing .env =="
  if File.exist?(".env")
    puts "Skipping: .env already exists"
  else
    FileUtils.cp(".env.example", ".env")
    puts "Created .env from .env.example"
  end

  puts "\n=> Starting database"
  case ENV["CI"]
  when "", nil
    system! "docker compose up -d postgres --no-log-prefix"
    sleep(2)
  else
    puts "Running on CI; skipping"
  end

  puts "\n== Preparing database =="
  system!("bin/rails db:prepare")

  puts "\n== Removing old logs and tempfiles =="
  system!("bin/rails log:clear tmp:clear")

  puts "\n== Restarting application server =="
  system!("bin/rails restart")
end
