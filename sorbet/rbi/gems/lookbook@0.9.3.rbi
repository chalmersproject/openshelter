# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `lookbook` gem.
# Please instead update this file by running `bin/tapioca gem lookbook`.

# source://lookbook//lib/lookbook/engine.rb#6
module Lookbook
  extend ::ActiveSupport::Autoload
  extend ::Lookbook::Utils

  class << self
    # source://lookbook//lib/lookbook/engine.rb#8
    def config; end

    # source://lookbook//lib/lookbook/engine.rb#12
    def logger; end

    # source://lookbook//lib/lookbook.rb#33
    def pages; end

    # source://lookbook//lib/lookbook.rb#29
    def previews; end

    # source://railties/7.0.3.1/lib/rails/engine.rb#405
    def railtie_helpers_paths; end

    # source://railties/7.0.3.1/lib/rails/engine.rb#394
    def railtie_namespace; end

    # source://railties/7.0.3.1/lib/rails/engine.rb#409
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # source://railties/7.0.3.1/lib/rails/engine.rb#397
    def table_name_prefix; end

    # source://railties/7.0.3.1/lib/rails/engine.rb#401
    def use_relative_model_naming?; end

    # source://lookbook//lib/lookbook/engine.rb#16
    def version; end
  end
end

class Lookbook::ApplicationController < ::ActionController::Base
  def index; end

  protected

  def feature_enabled?(feature); end

  private

  # source://actionview/7.0.3.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end

  class << self
    # source://activesupport/7.0.3.1/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionpack/7.0.3.1/lib/action_dispatch/routing/route_set.rb#564
    def _routes; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal/params_wrapper.rb#185
    def _wrapper_options; end

    def controller_path; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal/helpers.rb#63
    def helpers_path; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Lookbook::ApplicationController::HelperMethods
  include ::Loaf::OptionsValidator
  include ::Loaf::ViewExtensions
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::Turbo::Streams::ActionHelper
  include ::ActionText::ContentHelper
  include ::ActionText::TagHelper
  include ::Hotwire::Livereload::LivereloadTagsHelper
  include ::ActionController::Base::HelperMethods
  include ::Lookbook::ApplicationHelper
  include ::Lookbook::ComponentHelper
  include ::Lookbook::OutputHelper
  include ::Lookbook::Utils
  include ::Lookbook::PageHelper
  include ::Lookbook::PreviewHelper
end

module Lookbook::ApplicationHelper
  def config; end
  def feature_enabled?(name); end
  def landing_path; end
end

# source://lookbook//lib/lookbook/code_formatter.rb#5
module Lookbook::CodeFormatter
  class << self
    # source://lookbook//lib/lookbook/code_formatter.rb#16
    def beautify(source, language = T.unsafe(nil)); end

    # source://lookbook//lib/lookbook/code_formatter.rb#7
    def highlight(source, language, opts = T.unsafe(nil)); end
  end
end

# source://lookbook//lib/lookbook/code_inspector.rb#2
class Lookbook::CodeInspector
  include ::Lookbook::Utils

  # @return [CodeInspector] a new instance of CodeInspector
  #
  # source://lookbook//lib/lookbook/code_inspector.rb#8
  def initialize(taggable_object_path); end

  # Returns the value of attribute code_object.
  #
  # source://lookbook//lib/lookbook/code_inspector.rb#5
  def code_object; end

  # source://lookbook//lib/lookbook/code_inspector.rb#42
  def display_params; end

  # source://lookbook//lib/lookbook/code_inspector.rb#34
  def group; end

  # source://lookbook//lib/lookbook/code_inspector.rb#6
  def groups(*_arg0, **_arg1, &_arg2); end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/code_inspector.rb#12
  def hidden?; end

  # source://lookbook//lib/lookbook/code_inspector.rb#18
  def id; end

  # source://lookbook//lib/lookbook/code_inspector.rb#24
  def label; end

  # source://lookbook//lib/lookbook/code_inspector.rb#69
  def methods; end

  # source://lookbook//lib/lookbook/code_inspector.rb#28
  def notes; end

  # source://lookbook//lib/lookbook/code_inspector.rb#59
  def parameter_defaults; end

  # source://lookbook//lib/lookbook/code_inspector.rb#63
  def params; end

  # source://lookbook//lib/lookbook/code_inspector.rb#38
  def position; end

  # source://lookbook//lib/lookbook/code_inspector.rb#6
  def source(*_arg0, **_arg1, &_arg2); end
end

# source://lookbook//lib/lookbook/collection.rb#2
class Lookbook::Collection
  include ::Lookbook::Utils
  include ::Enumerable

  # @return [Collection] a new instance of Collection
  #
  # source://lookbook//lib/lookbook/collection.rb#9
  def initialize(path = T.unsafe(nil), items = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/collection.rb#51
  def add(item); end

  # source://lookbook//lib/lookbook/collection.rb#114
  def as_tree(filter_hidden: T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/collection.rb#7
  def each(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/collection.rb#70
  def find(lookup = T.unsafe(nil), &block); end

  # source://lookbook//lib/lookbook/collection.rb#78
  def find_by_id(id); end

  # source://lookbook//lib/lookbook/collection.rb#82
  def find_by_path(path); end

  # source://lookbook//lib/lookbook/collection.rb#100
  def find_first; end

  # source://lookbook//lib/lookbook/collection.rb#104
  def find_next(item); end

  # source://lookbook//lib/lookbook/collection.rb#86
  def find_parent(child); end

  # source://lookbook//lib/lookbook/collection.rb#109
  def find_previous(item); end

  # source://lookbook//lib/lookbook/collection.rb#61
  def get(name); end

  # source://lookbook//lib/lookbook/collection.rb#66
  def get_or_create(name); end

  # source://lookbook//lib/lookbook/collection.rb#39
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/collection.rb#19
  def id; end

  # source://lookbook//lib/lookbook/collection.rb#43
  def items; end

  # source://lookbook//lib/lookbook/collection.rb#27
  def label; end

  # source://lookbook//lib/lookbook/collection.rb#31
  def lookup_path; end

  # source://lookbook//lib/lookbook/collection.rb#23
  def name; end

  # source://lookbook//lib/lookbook/collection.rb#91
  def ordered_entities; end

  # Returns the value of attribute path.
  #
  # source://lookbook//lib/lookbook/collection.rb#6
  def path; end

  # source://lookbook//lib/lookbook/collection.rb#35
  def position; end

  # source://lookbook//lib/lookbook/collection.rb#7
  def size(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/collection.rb#137
  def type; end

  # source://lookbook//lib/lookbook/collection.rb#47
  def visible_items; end

  protected

  # source://lookbook//lib/lookbook/collection.rb#143
  def basename; end

  class << self
    # source://lookbook//lib/lookbook/collection.rb#148
    def describe_as; end
  end
end

module Lookbook::ComponentHelper
  def code(language = T.unsafe(nil), **opts, &block); end
  def component(name, **attrs, &block); end
  def icon(name, size: T.unsafe(nil), **attrs); end
  def render_component(name, **attrs, &block); end

  private

  def build_tag_values(*args); end
end

class Lookbook::Connection < ::ActionCable::Connection::Base
  def connect; end

  # source://actioncable/7.0.3.1/lib/action_cable/connection/identification.rb#21
  def uid; end

  # source://actioncable/7.0.3.1/lib/action_cable/connection/identification.rb#21
  def uid=(_arg0); end

  class << self
    # source://actioncable/7.0.3.1/lib/action_cable/connection/identification.rb#11
    def identifiers; end
  end
end

# source://lookbook//lib/lookbook/engine.rb#21
class Lookbook::Engine < ::Rails::Engine
  class << self
    # source://activesupport/7.0.3.1/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://lookbook//lib/lookbook/engine.rb#155
    def mounted_path; end

    # source://lookbook//lib/lookbook/engine.rb#159
    def parser; end

    # Returns the value of attribute preview_controller.
    #
    # source://lookbook//lib/lookbook/engine.rb#163
    def preview_controller; end

    # source://lookbook//lib/lookbook/engine.rb#132
    def websocket; end

    # source://lookbook//lib/lookbook/engine.rb#151
    def websocket_mount_path; end
  end
end

# source://lookbook//lib/lookbook/error.rb#2
class Lookbook::Error < ::StandardError
  # @return [Error] a new instance of Error
  #
  # source://lookbook//lib/lookbook/error.rb#7
  def initialize(original = T.unsafe(nil), title: T.unsafe(nil), message: T.unsafe(nil), file_path: T.unsafe(nil), file_name: T.unsafe(nil), line_number: T.unsafe(nil), source_code: T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/error.rb#3
  def backtrace(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/error.rb#57
  def file_lang; end

  # source://lookbook//lib/lookbook/error.rb#70
  def file_name; end

  # source://lookbook//lib/lookbook/error.rb#78
  def file_path; end

  # source://lookbook//lib/lookbook/error.rb#3
  def full_message(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/error.rb#87
  def line_number; end

  # source://lookbook//lib/lookbook/error.rb#66
  def message; end

  # source://lookbook//lib/lookbook/error.rb#96
  def parsed_backtrace; end

  # source://lookbook//lib/lookbook/error.rb#18
  def source_code; end

  # source://lookbook//lib/lookbook/error.rb#46
  def source_code_lines; end

  # source://lookbook//lib/lookbook/error.rb#62
  def title; end

  # source://lookbook//lib/lookbook/error.rb#3
  def to_s(*_arg0, **_arg1, &_arg2); end

  protected

  # source://lookbook//lib/lookbook/error.rb#113
  def source_code_end_line(lines); end

  # source://lookbook//lib/lookbook/error.rb#117
  def source_code_highlighted_line(lines); end

  # source://lookbook//lib/lookbook/error.rb#109
  def source_code_start_line(lines); end

  # source://lookbook//lib/lookbook/error.rb#105
  def target; end
end

# source://lookbook//lib/lookbook/error.rb#5
Lookbook::Error::LINES_AROUND = T.let(T.unsafe(nil), Integer)

# source://lookbook//lib/lookbook/features.rb#2
module Lookbook::Features
  class << self
    # source://lookbook//lib/lookbook/features.rb#14
    def enabled; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/features.rb#9
    def enabled?(name); end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/features.rb#5
    def experimental_feature?(name); end
  end
end

# source://lookbook//lib/lookbook/features.rb#3
Lookbook::Features::EXPERIMENTAL_FEATURES = T.let(T.unsafe(nil), Array)

# source://lookbook//lib/lookbook/code_formatter.rb#24
class Lookbook::Formatter < ::Rouge::Formatters::HTML
  # @return [Formatter] a new instance of Formatter
  #
  # source://lookbook//lib/lookbook/code_formatter.rb#25
  def initialize(opts = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/code_formatter.rb#31
  def stream(tokens, &block); end
end

# source://lookbook//lib/lookbook/lang.rb#2
module Lookbook::Lang
  class << self
    # source://lookbook//lib/lookbook/lang.rb#37
    def find(name); end

    # source://lookbook//lib/lookbook/lang.rb#41
    def guess(path); end
  end
end

# source://lookbook//lib/lookbook/markdown.rb#4
class Lookbook::Markdown
  class << self
    # source://lookbook//lib/lookbook/markdown.rb#14
    def render(text); end
  end
end

# source://lookbook//lib/lookbook/markdown.rb#5
Lookbook::Markdown::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://lookbook//lib/lookbook/markdown.rb#20
class Lookbook::Markdown::Renderer < ::Redcarpet::Render::HTML
  # source://lookbook//lib/lookbook/markdown.rb#21
  def block_code(code, language = T.unsafe(nil)); end
end

module Lookbook::OutputHelper
  def beautify(source, language = T.unsafe(nil)); end
  def highlight(source, language, opts = T.unsafe(nil)); end
  def markdown(text = T.unsafe(nil), &block); end
end

# source://lookbook//lib/lookbook/page.rb#2
class Lookbook::Page
  include ::Lookbook::Utils

  # @return [Page] a new instance of Page
  #
  # source://lookbook//lib/lookbook/page.rb#21
  def initialize(path, base_path); end

  # source://lookbook//lib/lookbook/page.rb#69
  def content; end

  # Returns the value of attribute errors.
  #
  # source://lookbook//lib/lookbook/page.rb#18
  def errors; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#61
  def footer?; end

  # source://lookbook//lib/lookbook/page.rb#41
  def full_path; end

  # source://lookbook//lib/lookbook/page.rb#65
  def get(key); end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#57
  def header?; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#49
  def hidden?; end

  # source://lookbook//lib/lookbook/page.rb#77
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/page.rb#37
  def lookup_path; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#53
  def markdown?; end

  # source://lookbook//lib/lookbook/page.rb#73
  def matchers; end

  # source://lookbook//lib/lookbook/page.rb#98
  def method_missing(method_name, *args, &block); end

  # source://lookbook//lib/lookbook/page.rb#45
  def name; end

  # source://lookbook//lib/lookbook/page.rb#81
  def parent_collections_names; end

  # source://lookbook//lib/lookbook/page.rb#29
  def path; end

  # source://lookbook//lib/lookbook/page.rb#89
  def tab; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#94
  def tab?; end

  # Returns the value of attribute tabs.
  #
  # source://lookbook//lib/lookbook/page.rb#19
  def tabs; end

  # Sets the attribute tabs
  #
  # @param value the value to set the attribute tabs to.
  #
  # source://lookbook//lib/lookbook/page.rb#19
  def tabs=(_arg0); end

  # source://lookbook//lib/lookbook/page.rb#85
  def type; end

  protected

  # source://lookbook//lib/lookbook/page.rb#112
  def file_contents; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#146
  def markdown_file?; end

  # source://lookbook//lib/lookbook/page.rb#116
  def options; end

  # source://lookbook//lib/lookbook/page.rb#142
  def path_name; end

  private

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#106
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end

  class << self
    # source://lookbook//lib/lookbook/page.rb#159
    def all; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/page.rb#155
    def exists?(path); end

    # source://lookbook//lib/lookbook/page.rb#151
    def find(path); end

    # source://lookbook//lib/lookbook/page.rb#181
    def page_paths; end
  end
end

# source://lookbook//lib/lookbook/page.rb#5
Lookbook::Page::FRONTMATTER_FIELDS = T.let(T.unsafe(nil), Array)

# source://lookbook//lib/lookbook/page_collection.rb#2
class Lookbook::PageCollection < ::Lookbook::Collection
  # source://lookbook//lib/lookbook/page_collection.rb#3
  def id; end

  class << self
    # source://lookbook//lib/lookbook/page_collection.rb#7
    def describe_as; end
  end
end

class Lookbook::PageController < ::ActionController::Base
  def render_page(page, locals = T.unsafe(nil)); end

  private

  # source://actionview/7.0.3.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end

  class << self
    # source://actionpack/7.0.3.1/lib/action_dispatch/routing/route_set.rb#564
    def _routes; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal/params_wrapper.rb#185
    def _wrapper_options; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal/helpers.rb#63
    def helpers_path; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Lookbook::PageController::HelperMethods
  include ::Loaf::OptionsValidator
  include ::Loaf::ViewExtensions
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::Turbo::Streams::ActionHelper
  include ::ActionText::ContentHelper
  include ::ActionText::TagHelper
  include ::Hotwire::Livereload::LivereloadTagsHelper
  include ::ActionController::Base::HelperMethods
  include ::Lookbook::Utils
  include ::Lookbook::PageHelper
  include ::Lookbook::ApplicationHelper
  include ::Lookbook::ComponentHelper
  include ::Lookbook::OutputHelper
  include ::Lookbook::PreviewHelper
end

module Lookbook::PageHelper
  include ::Lookbook::Utils

  def embed(*args, params: T.unsafe(nil), type: T.unsafe(nil), **opts); end
  def page_path(id); end

  protected

  def embed_not_found; end
end

class Lookbook::PagesController < ::Lookbook::ApplicationController
  def index; end
  def show; end

  protected

  def page_controller; end

  private

  # source://actionview/7.0.3.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end

  class << self
    # source://actionpack/7.0.3.1/lib/abstract_controller/helpers.rb#11
    def _helper_methods; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal/params_wrapper.rb#185
    def _wrapper_options; end

    def controller_path; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal/helpers.rb#63
    def helpers_path; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Lookbook::PagesController::HelperMethods
  include ::Loaf::OptionsValidator
  include ::Loaf::ViewExtensions
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::Turbo::Streams::ActionHelper
  include ::ActionText::ContentHelper
  include ::ActionText::TagHelper
  include ::Hotwire::Livereload::LivereloadTagsHelper
  include ::ActionController::Base::HelperMethods
  include ::Lookbook::ApplicationHelper
  include ::Lookbook::ComponentHelper
  include ::Lookbook::OutputHelper
  include ::Lookbook::Utils
  include ::Lookbook::PageHelper
  include ::Lookbook::PreviewHelper
  include ::Lookbook::ApplicationController::HelperMethods

  # def page_controller(*args, **_arg1, &block); end
end

# source://lookbook//lib/lookbook/params.rb#2
module Lookbook::Params
  class << self
    # source://lookbook//lib/lookbook/params.rb#4
    def build_param(param, default); end

    # source://lookbook//lib/lookbook/params.rb#37
    def cast(value, type = T.unsafe(nil)); end

    # source://lookbook//lib/lookbook/params.rb#20
    def parse_method_param_str(param_str); end

    private

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/params.rb#105
    def boolean?(value); end

    # source://lookbook//lib/lookbook/params.rb#67
    def guess_input(type, default); end

    # source://lookbook//lib/lookbook/params.rb#75
    def guess_type(input, default); end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/params.rb#89
    def input_text?(input); end

    # source://lookbook//lib/lookbook/params.rb#99
    def safe_parse_yaml(value, fallback); end
  end
end

# source://lookbook//lib/lookbook/parser.rb#4
class Lookbook::Parser
  # @return [Parser] a new instance of Parser
  #
  # source://lookbook//lib/lookbook/parser.rb#6
  def initialize(paths, registry_path); end

  # source://lookbook//lib/lookbook/parser.rb#20
  def get_code_object(path); end

  # source://lookbook//lib/lookbook/parser.rb#12
  def parse; end

  # Returns the value of attribute registry_path.
  #
  # source://lookbook//lib/lookbook/parser.rb#5
  def registry_path; end

  class << self
    # source://lookbook//lib/lookbook/parser.rb#27
    def define_tags; end
  end
end

# source://lookbook//lib/lookbook/preview.rb#2
class Lookbook::Preview
  include ::Lookbook::Utils

  # @return [Preview] a new instance of Preview
  #
  # source://lookbook//lib/lookbook/preview.rb#8
  def initialize(preview); end

  # source://lookbook//lib/lookbook/preview.rb#55
  def default_example; end

  # source://lookbook//lib/lookbook/preview.rb#86
  def display_params; end

  # source://lookbook//lib/lookbook/preview.rb#29
  def example(example_name); end

  # source://lookbook//lib/lookbook/preview.rb#33
  def examples; end

  # source://lookbook//lib/lookbook/preview.rb#63
  def full_path; end

  # source://lookbook//lib/lookbook/preview.rb#6
  def group(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#6
  def hidden?(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#78
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/preview.rb#13
  def id; end

  # source://lookbook//lib/lookbook/preview.rb#21
  def label; end

  # source://lookbook//lib/lookbook/preview.rb#82
  def layout; end

  # source://lookbook//lib/lookbook/preview.rb#59
  def lookup_path; end

  # source://lookbook//lib/lookbook/preview.rb#5
  def name(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#6
  def notes(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#74
  def parent_collections_names; end

  # source://lookbook//lib/lookbook/preview.rb#59
  def path; end

  # source://lookbook//lib/lookbook/preview.rb#6
  def position(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#17
  def preview_class; end

  # source://lookbook//lib/lookbook/preview.rb#70
  def preview_paths; end

  # source://lookbook//lib/lookbook/preview.rb#5
  def render_args(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#25
  def type; end

  class << self
    # source://lookbook//lib/lookbook/preview.rb#103
    def all; end

    # source://lookbook//lib/lookbook/preview.rb#99
    def clear_cache; end

    # source://lookbook//lib/lookbook/preview.rb#124
    def errors; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/preview.rb#95
    def exists?(path); end

    # source://lookbook//lib/lookbook/preview.rb#91
    def find(path); end

    protected

    # source://lookbook//lib/lookbook/preview.rb#130
    def load_previews; end

    # source://lookbook//lib/lookbook/preview.rb#144
    def preview_files; end
  end
end

# source://lookbook//lib/lookbook/preview_collection.rb#2
class Lookbook::PreviewCollection < ::Lookbook::Collection
  # source://lookbook//lib/lookbook/preview_collection.rb#7
  def find_example(path); end

  # source://lookbook//lib/lookbook/preview_collection.rb#3
  def id; end

  class << self
    # source://lookbook//lib/lookbook/preview_collection.rb#11
    def describe_as; end
  end
end

# source://lookbook//lib/lookbook/preview_controller.rb#2
module Lookbook::PreviewController
  # source://lookbook//lib/lookbook/preview_controller.rb#3
  def render_example_to_string(preview, example_name); end

  # source://lookbook//lib/lookbook/preview_controller.rb#17
  def render_in_layout_to_string(template, locals, layout = T.unsafe(nil)); end
end

# source://lookbook//lib/lookbook/preview_example.rb#2
class Lookbook::PreviewExample
  include ::Lookbook::Utils

  # @return [PreviewExample] a new instance of PreviewExample
  #
  # source://lookbook//lib/lookbook/preview_example.rb#8
  def initialize(name, preview); end

  # source://lookbook//lib/lookbook/preview_example.rb#26
  def display_params; end

  # source://lookbook//lib/lookbook/preview_example.rb#6
  def group(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#6
  def hidden?(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#54
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/preview_example.rb#14
  def id; end

  # source://lookbook//lib/lookbook/preview_example.rb#22
  def label; end

  # source://lookbook//lib/lookbook/preview_example.rb#18
  def lookup_path; end

  # source://lookbook//lib/lookbook/preview_example.rb#50
  def matchers; end

  # source://lookbook//lib/lookbook/preview_example.rb#30
  def method_source; end

  # Returns the value of attribute name.
  #
  # source://lookbook//lib/lookbook/preview_example.rb#5
  def name; end

  # source://lookbook//lib/lookbook/preview_example.rb#6
  def notes(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#6
  def params(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#18
  def path; end

  # source://lookbook//lib/lookbook/preview_example.rb#6
  def position(*_arg0, **_arg1, &_arg2); end

  # Returns the value of attribute preview.
  #
  # source://lookbook//lib/lookbook/preview_example.rb#5
  def preview; end

  # source://lookbook//lib/lookbook/preview_example.rb#6
  def source(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#34
  def source_lang; end

  # source://lookbook//lib/lookbook/preview_example.rb#42
  def template_lang(template_path); end

  # source://lookbook//lib/lookbook/preview_example.rb#38
  def template_source(template_path); end

  # source://lookbook//lib/lookbook/preview_example.rb#46
  def type; end

  protected

  # source://lookbook//lib/lookbook/preview_example.rb#60
  def full_template_path(template_path); end

  class << self
    # source://lookbook//lib/lookbook/preview_example.rb#68
    def all; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/preview_example.rb#76
    def exists?(path); end

    # source://lookbook//lib/lookbook/preview_example.rb#72
    def find(path); end
  end
end

# source://lookbook//lib/lookbook/preview_group.rb#2
class Lookbook::PreviewGroup
  include ::Lookbook::Utils

  # @return [PreviewGroup] a new instance of PreviewGroup
  #
  # source://lookbook//lib/lookbook/preview_group.rb#7
  def initialize(name, preview, examples); end

  # source://lookbook//lib/lookbook/preview_group.rb#33
  def display_params; end

  # Returns the value of attribute examples.
  #
  # source://lookbook//lib/lookbook/preview_group.rb#5
  def examples; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/preview_group.rb#41
  def hidden?; end

  # source://lookbook//lib/lookbook/preview_group.rb#53
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/preview_group.rb#13
  def id; end

  # source://lookbook//lib/lookbook/preview_group.rb#21
  def label; end

  # source://lookbook//lib/lookbook/preview_group.rb#17
  def lookup_path; end

  # source://lookbook//lib/lookbook/preview_group.rb#49
  def matchers; end

  # Returns the value of attribute name.
  #
  # source://lookbook//lib/lookbook/preview_group.rb#5
  def name; end

  # source://lookbook//lib/lookbook/preview_group.rb#29
  def params; end

  # source://lookbook//lib/lookbook/preview_group.rb#17
  def path; end

  # source://lookbook//lib/lookbook/preview_group.rb#45
  def position; end

  # Returns the value of attribute preview.
  #
  # source://lookbook//lib/lookbook/preview_group.rb#5
  def preview; end

  # source://lookbook//lib/lookbook/preview_group.rb#25
  def type; end
end

module Lookbook::PreviewHelper
  def lookbook_display(key, fallback = T.unsafe(nil)); end
end

class Lookbook::PreviewsController < ::Lookbook::ApplicationController
  def preview; end
  def show; end

  private

  # source://actionview/7.0.3.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end
  def drawer_panels; end
  def example_data(example); end
  def examples_data; end
  def lookup_entities; end
  def prettify_error(exception); end
  def preview_controller; end
  def preview_panels; end
  def render_examples(examples); end
  def render_in_layout(path, layout: T.unsafe(nil), **locals); end
  def set_params; end
  def set_title; end

  class << self
    # source://activesupport/7.0.3.1/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal/params_wrapper.rb#185
    def _wrapper_options; end

    def controller_path; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal/helpers.rb#63
    def helpers_path; end

    # source://actionpack/7.0.3.1/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

class Lookbook::ReloadChannel < ::ActionCable::Channel::Base
  def subscribed; end
end

# source://lookbook//lib/lookbook/utils.rb#2
module Lookbook::Utils
  protected

  # source://lookbook//lib/lookbook/utils.rb#21
  def class_name(klass); end

  # source://lookbook//lib/lookbook/utils.rb#8
  def generate_id(*args); end

  # source://lookbook//lib/lookbook/utils.rb#37
  def get_frontmatter(str); end

  # source://lookbook//lib/lookbook/utils.rb#29
  def get_position_prefix(str); end

  # source://lookbook//lib/lookbook/utils.rb#25
  def normalize_matchers(*matchers); end

  # source://lookbook//lib/lookbook/utils.rb#13
  def preview_class_basename(klass); end

  # source://lookbook//lib/lookbook/utils.rb#17
  def preview_class_name(klass); end

  # source://lookbook//lib/lookbook/utils.rb#33
  def remove_position_prefix(str); end

  # source://lookbook//lib/lookbook/utils.rb#41
  def strip_frontmatter(str); end

  # source://lookbook//lib/lookbook/utils.rb#45
  def to_lookup_path(path); end

  # source://lookbook//lib/lookbook/utils.rb#49
  def to_preview_path(*args); end

  private

  # source://lookbook//lib/lookbook/utils.rb#55
  def parse_frontmatter(content); end

  # source://lookbook//lib/lookbook/utils.rb#64
  def parse_position_prefix(str); end
end

# source://lookbook//lib/lookbook/utils.rb#4
Lookbook::Utils::FRONTMATTER_REGEX = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/utils.rb#3
Lookbook::Utils::POSITION_PREFIX_REGEX = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/version.rb#2
Lookbook::VERSION = T.let(T.unsafe(nil), String)

class Redcarpet::Render::Base
  def initialize; end
end

class Redcarpet::Render::HTML < ::Redcarpet::Render::Base
  def initialize(*_arg0); end
end
